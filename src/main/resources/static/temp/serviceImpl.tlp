package com.zf.{ProjectName}.{ModuleName}.service.impl;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import com.zf.{ProjectName}.utils.BaseVO;
import org.springframework.transaction.annotation.Transactional;
import com.zf.{ProjectName}.{ModuleName}.dao.entity.{EntityName}Entity;
import com.zf.{ProjectName}.{ModuleName}.logic.{EntityName}AL;
import com.zf.{ProjectName}.{ModuleName}.service.I{EntityName}Service;
import com.zf.{ProjectName}.{ModuleName}.service.vo.{EntityName}VO;
import com.zf.{ProjectName}.utils.CastEnUtil;
import org.springframework.beans.factory.annotation.Autowired;

import org.apache.commons.collections4.CollectionUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.servlet.ModelAndView;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;

/**
 *
 *@author
 *Service实现类
 */
@RestController
@RequestMapping(value="/{ModuleName}")
public class {EntityName}ServiceImpl implements I{EntityName}Service{
    @Autowired
    private {EntityName}AL {LowercaseEntityName}AL;

    @Override
    @RequestMapping(value = "/{LowercaseEntityName}Index")
    public ModelAndView page() {
        return new ModelAndView("{ModuleName}/{EntityName}Index");
    }
    /**
     *
     *查询
     */
    @Override
    @RequestMapping(value="/find{EntityName}s")
    public BaseVO<{EntityName}VO> find{EntityName}s(BaseVO<{EntityName}VO> baseVO,{EntityName}VO {LowercaseEntityName}VO){
        //VO转换成Entity
        {EntityName}Entity {LowercaseEntityName}Entity = CastEnUtil.convertPojo({LowercaseEntityName}VO,{EntityName}Entity.class);
        //分页查询，
        List<{EntityName}Entity> {LowercaseEntityName}List={LowercaseEntityName}AL.find{EntityName}s(baseVO,{LowercaseEntityName}Entity);
        if(!CollectionUtils.isEmpty({LowercaseEntityName}List)){
            baseVO.setRecords(CastEnUtil.convertPojos({LowercaseEntityName}List,{EntityName}VO.class));
        }
        return baseVO;
    }
    /**
     *
     *增加
     */
    @Override
    @RequestMapping(value="/insert",method=RequestMethod.POST)
    @Transactional
    public BaseVO<{EntityName}VO> insert(@ModelAttribute("{LowercaseEntityName}VO") {EntityName}VO {LowercaseEntityName}VO,HttpServletRequest request){
        BaseVO<{EntityName}VO> baseVO = new BaseVO<>();
            try{
                int i={LowercaseEntityName}AL.insert(CastEnUtil.convertPojo({LowercaseEntityName}VO,{EntityName}Entity.class));
                if(i==1){
                    baseVO.setStatus("0000");
                    baseVO.setSuccess(true);
                    baseVO.setMessage("新增成功");
                }else{
                    baseVO.setStatus("9999");
                    baseVO.setSuccess(false);
                    baseVO.setMessage("新增失败");
                }
            }catch (Exception e){
                baseVO.setStatus("9999");
                baseVO.setSuccess(false);
                baseVO.setMessage("新增异常："+e.getMessage());
            }
            return baseVO;
    }
    /**
     *
     *删除
     */
    @Override
    @RequestMapping(value="/delete",method=RequestMethod.DELETE)
    @Transactional
    public BaseVO<{EntityName}VO> delete(@RequestBody List<{EntityName}VO> {LowercaseEntityName}List){
        BaseVO<{EntityName}VO> baseVO = new BaseVO<>();
        int i=0;
        try{
            boolean b=true;
            for({EntityName}VO {LowercaseEntityName}VO:{LowercaseEntityName}List){
                b=true;
                i++;
                if(1>{LowercaseEntityName}AL.delete(CastEnUtil.convertPojo({LowercaseEntityName}VO,{EntityName}Entity.class))){
                    b=false;
                    break;
                }
            }
            if(b){
                baseVO.setStatus("0000");
                baseVO.setSuccess(true);
                baseVO.setMessage("删除成功");
            }else{
                baseVO.setStatus("9999");
                baseVO.setSuccess(false);
                baseVO.setMessage("第"+i+"条记录删除失败");
            }
        }catch (Exception e){
            baseVO.setStatus("9999");
            baseVO.setSuccess(false);
            baseVO.setMessage("第"+i+"条记录删除异常："+e.getMessage());
        }
        return baseVO;
    }
    /**
     *
     *更新
     */
    @Override
    @RequestMapping(value="/update",method=RequestMethod.PUT)
    @Transactional
    public BaseVO<{EntityName}VO> update(@ModelAttribute("{LowercaseEntityName}VO") {EntityName}VO {LowercaseEntityName}VO){
        BaseVO<{EntityName}VO> baseVO = new BaseVO<>();
        try{
            int i={LowercaseEntityName}AL.update(CastEnUtil.convertPojo({LowercaseEntityName}VO,{EntityName}Entity.class));
            if(i==1){
                baseVO.setStatus("0000");
                baseVO.setSuccess(true);
                baseVO.setMessage("修改成功");
            }else{
                baseVO.setStatus("9999");
                baseVO.setSuccess(false);
                baseVO.setMessage("修改失败");
            }
        }catch (Exception e){
            baseVO.setStatus("9999");
            baseVO.setSuccess(false);
            baseVO.setMessage("修改异常："+e.getMessage());
        }
        return baseVO;
    }
    /**
     *
     *查看
     */
    @Override
    @RequestMapping(value="/findBySearchText",method=RequestMethod.POST)
    @Transactional
    public BaseVO<{EntityName}VO> findBySearchText(BaseVO<{EntityName}VO> baseVO ,@ModelAttribute("{LowercaseEntityName}VO") {EntityName}VO {LowercaseEntityName}VO){
        //VO转换成Entity
        {EntityName}Entity {LowercaseEntityName}Entity = CastEnUtil.convertPojo({LowercaseEntityName}VO,{EntityName}Entity.class);
        //分页查询，
        List<{EntityName}Entity> {LowercaseEntityName}List={LowercaseEntityName}AL.findBySearchText(baseVO,{LowercaseEntityName}Entity);
        if(!CollectionUtils.isEmpty({LowercaseEntityName}List)){
            baseVO.setRecords(CastEnUtil.convertPojos({LowercaseEntityName}List,{EntityName}VO.class));
        }
        return baseVO;
    }
    /**
     *
     *查看
     */
    @Override
    @RequestMapping(value="/get{EntityName}",method=RequestMethod.POST)
    @Transactional
    public BaseVO<{EntityName}VO> get{EntityName}(@ModelAttribute("{LowercaseEntityName}VO") {EntityName}VO {LowercaseEntityName}VO){
        BaseVO<{EntityName}VO> baseVO = new BaseVO<>();
        {EntityName}Entity {LowercaseEntityName}Entity = {LowercaseEntityName}AL.get{EntityName}(CastEnUtil.convertPojo({LowercaseEntityName}VO,{EntityName}Entity.class));
        if({LowercaseEntityName}Entity !=null){
            List<{EntityName}VO> {LowercaseEntityName}List=new ArrayList<>();
            {LowercaseEntityName}List.add(CastEnUtil.convertPojo({LowercaseEntityName}Entity,{EntityName}VO.class));
            baseVO.setRecords({LowercaseEntityName}List);
            baseVO.setMessage("查询成功");
            baseVO.setSuccess(true);
            baseVO.setStatus("0000");
        }else{
            baseVO.setMessage("该条记录不存在");
            baseVO.setSuccess(false);
            baseVO.setStatus("9999");
        }
        return baseVO;

    }
}