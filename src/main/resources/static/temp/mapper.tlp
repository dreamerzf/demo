<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zf.{ProjectName}.{ModuleName}.dao.{EntityName}Dao">
    <resultMap id="{LowercaseEntityName}" type="com.zf.{ProjectName}.{ModuleName}.dao.entity.{EntityName}Entity">
      {FieldMapList}
    </resultMap>
    <sql id="columnAll">
        {FieldJoin}
    </sql>
    <select id="find{EntityName}s" parameterType="com.zf.{ProjectName}.{ModuleName}.dao.entity.{EntityName}Entity" resultMap="{LowercaseEntityName}" >
        select <include refid = "columnAll" /> from {TableName}
        <where>
            {FieldIfList}
        </where>
    </select>
    <select id="findBySearchText" resultMap="{LowercaseEntityName}">
        select <include refid = "columnAll" /> from {TableName}
        <where>
            <if test="{LowercaseEntityName}.searchText !=null and {LowercaseEntityName}.searchText != ''">
                UPPER{StringFieldJoin}
                like '%' || UPPER(#{{LowercaseEntityName}.searcheText,jdbcType=VARCHAR}) || '%'
            </if>
        </where>
    </select>
    <select id="getInfo" parameterType="com.zf.{ProjectName}.{ModuleName}.dao.entity.{EntityName}Entity" resultMap="{LowercaseEntityName}" >
           select <include refid = "columnAll" /> from {TableName}
           <where>
               {FieldIfList}
           </where>
    </select>
    <select id="get{EntityName}" parameterType="com.zf.{ProjectName}.{ModuleName}.dao.entity.{EntityName}Entity" resultMap="{LowercaseEntityName}" >
           select <include refid = "columnAll" /> from {TableName}
           <where>
               {PrimaryKeyList}
           </where>
    </select>
    <insert id= "insert">
        insert into {TableName}
        ({FieldJoin})
        values({FieldMapJoin})
    </insert>

    <update id="update" parameterType="com.zf.{ProjectName}.{ModuleName}.dao.entity.{EntityName}Entity">
        update {TableName} set
        {FieldSetList}
        WHERE {PrimaryKeyList}
    </update>
    <delete id="delete">
        delete from {TableName} where {PrimaryKeyList}
    </delete>
</mapper>
